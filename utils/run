#!/bin/bash

###
# Helper functions
#

function determineWorkDir {
	if [[ -n $1 ]];
	then
		echo $1
	else
		echo `pwd`
	fi
}

function determineProjectType {
	for file in $1/*;
	do
		if [[ $file =~ "pom.xml" ]];
		then
			echo "maven"
			return
		elif [[ $file =~ "start.js" ]];
		then
			echo "node"
			return
		elif [[ $file =~ "app.rb" ]];
		then
			echo "ruby"
			return
		fi
	done
	echo "unknown"
}

function locateTargetDir {
	if [[ -d "$1/impl/target" ]];
	then
		echo "$1/impl/target"
	elif [[ -d "$1/$(echo $1 | awk -F '/' '{print $NF}')-impl/target" ]];
	then
		echo "$1/$(echo $1 | awk -F '/' '{print $NF}')-impl/target"
	elif [[ -d "$1/target" ]];
	then
		echo "$1/target"
	else
		echo ""
	fi
}

function locateJarFile {
	targetDir=$(locateTargetDir $1)
	if [[ -e $targetDir ]];
	then
		for file in $targetDir/*;
		do
			if [[ $file =~ .jar ]] && ! [[ $file =~ sources ]] && ! [[ $file =~ original ]];
			then
				echo $file
				return
			fi
		done
	else
		echo ""
	fi
}

function locateConfigFile {
	targetDir=$(locateTargetDir $1)
	if [[ -n $targetDir ]];
	then
		for file in $targetDir/../*;
		do
			if [[ $file =~ .*local.*.(yaml|json) ]];
			then
				echo "$file"
				return
			fi
		done
		if [[ -e "$targetDir/../configuration.json" ]];
		then
			echo "$targetDir/../configuration.json"
			return
		fi
		if [[ -e "$targetDir/../configuration.yaml" ]];
		then
			echo "$targetDir/../configuration.yaml"
			return
		fi
	fi
	echo ""
}

function runMavenProject {
	jarFile=$(locateJarFile $1)
	if [[ -e $jarFile ]];
	then
		echo "Located JAR file is" $jarFile
		configFile=$(locateConfigFile $1)
		if [[ -e $configFile ]];
		then
			echo "Configuration file is $configFile"
			#if [[ $jarFile =~ .*interceptor.* ]];
			#then
				#serverParam=""
			#else
				serverParam="server"
			#fi
			command="java $debugString -jar $jarFile $serverParam $configFile"
			echo -e "Execute '$command'\n"
			eval $command
		else
			echo "No yaml configuration file found"
			return
		fi
	else
		echo "No JAR file found (perhaps You didn't package the project?)"
		return
	fi
}

function runNodeProject {
	command="node $1/start.js"
	echo -e "Execute '$command'\n"
	eval $command
}

function runRubyProject {
	command="APP_MODE=http foreman start -f $1/Procfile_development"
	echo -e "Execute '$command'\n"
	eval $command
}

###
# Main

debugString=""

while getopts "d:" opt; do
	case "$opt" in
		d)
			debugString="-Xdebug -Xrunjdwp:transport=dt_socket,address=$OPTARG,server=y,suspend=n"
			;;
		*)
			;;
	esac
done

workDir=$(determineWorkDir ${@:$OPTIND:1})
projectType=$(determineProjectType $workDir)

case $projectType in
	"maven")
		echo "Project type is maven"
		runMavenProject $workDir
		;;
	"node")
		echo "Project type is node"
		runNodeProject $workDir
		;;
	"ruby")
		echo "Project type is ruby"
		runRubyProject $workDir
		;;
	*)
		;;
esac

