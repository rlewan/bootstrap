---
- name: 'Install iTerm2 terminal emulator'
  homebrew_cask:
    name: '{{ item }}'
    state: 'present'
  with_items:
    - 'iterm2'

- name: 'Ensure "~/Library/Application Support/iTerm2/DynamicProfiles" folder is present'
  file:
    path: '~/Library/Application Support/iTerm2/DynamicProfiles'
    state: 'directory'

- name: 'Copy iTerm2 dynamic profiles'
  copy:
    src: 'iTerm2/profiles.json'
    dest: '~/Library/Application Support/iTerm2/DynamicProfiles'

- name: 'Copy .inputrc to the home directory'
  copy:
    src: 'bash/.inputrc'
    dest: '~'

- name: 'Install common utility software'
  homebrew:
    name: '{{ item }}'
    state: 'present'
  with_items:
    - 'bash-completion'
    - 'wget'
    - 'bat'
    - 'watch'
    - 'pstree'
    - 'jq'
    - 'glances'
    - 'coreutils'
    - 'k9s'

- name: 'Ensure .bash_profile file is present'
  copy:
    src: 'bash/.bash_profile'
    dest: '~/.bash_profile'
    force: 'no'

- name: 'Ensure my shell setup'
  blockinfile:
    path: '~/.bash_profile'
    marker: '# {mark} ANSIBLE MANAGED BASH CONFIG'
    block: |
      # Add brew folders to the path
      export PATH="$PATH:/opt/homebrew/bin:/opt/homebrew/sbin"

      # Add InteliJ IDEA launcher script to path
      export PATH="$PATH:/Applications/IntelliJ IDEA.app/Contents/MacOS"

      # Disable the ZSH recommendation
      export BASH_SILENCE_DEPRECATION_WARNING=1

      # Bash completion
      if [[ -n "$(command -v brew)" ]]
      then
          if [[ -f $(brew --prefix)/etc/bash_completion ]]; then
              . $(brew --prefix)/etc/bash_completion
          fi
      fi

      if [[ -f /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash ]]; then
      	. /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash
      fi

      # Functions
      function g {
          if [[ -f "gradlew" ]]
          then
              eval "./gradlew $@"
          else
              echo "No gradlew wrapper around..."
          fi
      }

      function cls {
          clear
          if [ -d '.git' ];
          then
              git status
              echo ""
          fi
      }

      function next-uuid {
        nextVal="$(uuidgen | awk '{ print tolower($0) }' | tr -d '\n')"
        echo -n "$nextVal" | pbcopy
        echo "New UUID '$nextVal' copied to clipboard"
        echo
      }

      function jdk {
        if [[ -z "$1" ]]
        then
          /usr/libexec/java_home -V
        else
          local java_home_path="$(/usr/libexec/java_home --version $1)"
          echo "Setting JAVA_HOME=\"$java_home_path\""
          export JAVA_HOME="$java_home_path"
        fi
      }

      # Aliases
      alias la='ls -a'
      alias ll='ls -lha'
      alias l='ls -lh'
      alias ch='git rev-parse HEAD'

      # Terminal colors
      export CLICOLOR=1
      export LSCOLORS="GxFxCxDxBxegedabagaced"
      alias grep='grep --color=auto'

      GREEN="\033[32m"
      YELLOW="\033[33;1m"
      CLEAR="\033[0m"

      export PS1="${GREEN}\u@\h: ${YELLOW}\w ${CLEAR}\n\$ "
    state: 'present'

- name: 'Install Vundle'
  git:
    repo: 'https://github.com/VundleVim/Vundle.vim.git'
    dest: '~/.vim/bundle/Vundle.vim'
  notify: 'Install Vundle plugins'

- name: 'Copy .vimrc file to the home directory'
  copy:
    src: 'vim/.vimrc'
    dest: '~'
  notify: 'Install Vundle plugins'
